#!/bin/sh

log() {
    printf '\033[1m%s\033[m\n' "$@"
}

die() {
    log "$@"
    exit 1
}

has_xsr() {
    command -v xsetroot >/dev/null
}

set_xsr() {
    [ -z "$nobg" ] && has_xsr && xsetroot -solid "$1"
}

random_palette() {
    set -f -- "$1/"*
    shift "$(shuf -i "1-$#" -n 1)"
    set +f

    while [ ! -f "$1" ] && [ "$2" ]; do shift; done

    [ -f "$1" ] || args

    palette=${1##*/}
}

add_sequence() {
    seqs="$seqs]$1;$2\\";
}

make_sequences() {
    [ -f "$1/$palette" ] || die "Palette '$palette' not found"

    :> "$CACHE_DIR/colors"

    i=0
    while read -r line; do
        color="${line:=#000000}"

        printf '%s\n' "color$i=\"$line\"" >> "$CACHE_DIR/colors"

        add_sequence "4;$i" "$color"

        [ "$i" = 0 ] && {
            add_sequence "11" "$color"
            add_sequence "19" "$color"
            add_sequence "4;232" "$color"

            [ "$VTE_VERSION" ] || add_sequence "708" "$color"

            [ "$flat" ] && {
                set_xsr "$color"
            }
        }

        [ "$i" = 8 ] && [ ! "$flat" ] && {
            set_xsr "$color"
        }

        [ "$i" = 15 ] && {
            add_sequence "10" "$color"
            add_sequence "12" "$color"
            add_sequence "13" "$color"
            add_sequence "4;256" "$color"
        }

        i=$((i+1))
    done < "$1/$palette"

    for tty in /dev/fd/0 /dev/pts/[0-9]*; do
        [ -w "$tty" ] && printf %b "$seqs" > "$tty" &
    done

    printf %b "$seqs" > "$CACHE_DIR/palette"
    printf %s "$palette" > "$CACHE_DIR/current"
}

print_palette() {
    printf 'Using palette: \033[1m%s\033[m\n\n' "$palette"

    for i in 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15; do
        printf '\033[48;5;%sm    \033[m' "$i"

        [ "$i" = 7 ] && printf '\n'
    done

    printf '\n\n'

    exit 0
}

current_palette() {
    [ -f "$CACHE_DIR/current" ] && {
        while IFS= read -r line || [ -n "$line" ]; do
            printf 'Current palette: \033[1m%s\033[m\n' "$line"
        done < "$CACHE_DIR/current"
    }

    exit 0
}

list_palettes() {
    for p in "$1/"*; do
        [ -f "$p" ] && {
            printf '\e[1;3'$(((${#p} % 6) + 1))m%s'\e[m\n' "${p##*/}"
        }
    done

    exit 0
}

args() {
    mode=light

    while getopts dmns:clh opt; do case $opt in
        d) mode=dark ;;
        m) flat=1 ;;
        n) nobg=1 ;;
        s) palette=$OPTARG ;;
        c) curr=1 ;;
        l) list=1 ;;
        *)
            die "${0##*/}: Swap between palettes in a jiffy" \
                "Usage: ${0##*/} [-lcdhn] [-s palette]" \
                "    -l list palettes" \
                "    -c current palette name" \
                "    -d use dark theme" \
                "    -m match bg color with window color" \
                "    -n skip setting bg color" \
                "    -s use specific palette" \
                "    -h show this information"
        ;;
    esac; done

    set -- "${PAL_PATH%%/}/palettes/${mode:=light}"

    [ "$curr" ] && current_palette
    [ "$list" ] && list_palettes "$@"
    [ "$palette" ] || random_palette "$@"

    [ "$palette" ] && {
        make_sequences "$@"
        print_palette
    }
}

main() {
    [ -z "$PAL_PATH" ] && {
        die "PAL_PATH is not set."
    }

    has_xsr || log "Install xsetroot in order for pal to set bg color"

    mkdir -p "${CACHE_DIR:=${HOME}/.cache/pal}"

    args "$@"
}

main "$@"
